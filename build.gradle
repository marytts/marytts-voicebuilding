plugins {
    id 'java-library'
    id 'groovy'
    id 'signing'
    id 'maven-publish'
}

group 'de.dfki.mary'
version '0.3.0-SNAPSHOT'
description 'Utility classes for MaryTTS voicebuilding'

ext {
    url = 'https://github.com/marytts/marytts-voicebuilding'
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'de.dfki.mary', name: 'marytts-runtime', version: libs.versions.marytts.get(), {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }
    runtimeOnly group: 'xerces', name: 'xercesImpl', version: '2.12.2'
    testImplementation group: 'org.testng', name: 'testng', version: '7.5.1'
    testImplementation group: 'xmlunit', name: 'xmlunit', version: '1.6'
    testRuntimeOnly group: 'de.dfki.mary', name: 'voice-cmu-slt-hsmm', version: libs.versions.marytts.get(), {
        transitive = false
    }
    testRuntimeOnly group: 'de.dfki.mary', name: 'marytts-lang-en', version: libs.versions.marytts.get(), {
        transitive = false
    }
    testRuntimeOnly group: 'de.dfki.mary', name: 'marytts-lang-de', version: libs.versions.marytts.get(), {
        transitive = false
    }
    constraints {
        implementation('de.dfki.lt.jtok:jtok-core:1.9.4') {
            because 'transitive dependency v1.9.3 is not available in Maven Central'
        }
    }
}

test {
    useTestNG()
    workingDir = buildDir
    testLogging {
        exceptionFormat = 'full'
    }
}

def batchProcessorIntegrationTestTask = tasks.register('batchProcessorIntegrationTest', JavaExec) {
    group 'Verification'
    classpath = sourceSets.test.runtimeClasspath
    mainClass.set 'marytts.BatchProcessor'
    def batchFile = file("$temporaryDir/batch.json")
    args batchFile
    systemProperty 'mary.base', temporaryDir
    if (JavaVersion.current().java9Compatible) {
        jvmArgs = [
                '--add-opens', 'java.base/java.io=ALL-UNNAMED',
                '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                '--add-opens', 'java.base/java.util=ALL-UNNAMED'
        ]
    }
    def outputFile = file("$temporaryDir/output.xml")
    doFirst {
        def inputFile = file("$temporaryDir/input.txt")
        inputFile.text = "Hello from MaryTTS!"
        def batch = [
                [
                        locale    : Locale.US.toString(),
                        inputType : 'TEXT',
                        inputFile : inputFile.path,
                        outputType: 'ALLOPHONES',
                        outputFile: outputFile.path
                ]
        ]
        batchFile.text = new groovy.json.JsonBuilder(batch).toPrettyString()
    }
    doLast {
        assert outputFile.exists()
    }
}

def featureListerIntegrationTestTask = tasks.register('featureListerIntegrationTest', JavaExec) {
    group 'Verification'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set 'marytts.FeatureLister'
    systemProperties = [
            locale    : Locale.US.toString(),
            outputFile: new File(temporaryDir, 'features.txt')
    ]
    if (JavaVersion.current().java9Compatible) {
        jvmArgs = [
                '--add-opens', 'java.base/java.io=ALL-UNNAMED',
                '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                '--add-opens', 'java.base/java.util=ALL-UNNAMED'
        ]
    }
}

tasks.named('check') {
    dependsOn batchProcessorIntegrationTestTask,
            featureListerIntegrationTestTask
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'MaryTTS Voicebuilding'
                url = project.url
                description = project.description
                inceptionYear = '2015'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0-standalone.html'
                    }
                }
                developers {
                    developer {
                        id = 'psibre'
                        name = 'Ingmar Steiner'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/marytts/marytts-voicebuilding.git'
                    developerConnection = 'scm:git:ssh://git@github.com:marytts/marytts-voicebuilding.git'
                    url = project.url

                }
            }
        }
    }
    repositories {
        maven {
            name 'OSSRH'
            url isReleaseVersion ? 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    : 'https://oss.sonatype.org/content/repositories/snapshots'
            credentials(PasswordCredentials)
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign).configureEach {
    onlyIf { isReleaseVersion }
}
